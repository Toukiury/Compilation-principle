Terminals unused in grammar

   EOF_TOKEN


State 166 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program_head: PROGRAM IDENTIFIER LPAREN idlist RPAREN
    2             | PROGRAM IDENTIFIER

    3 program_body: const_declarations var_declarations subprogram_declarations compound_statement

    4 program: program_head SEMICOLON program_body DOT

    5 const_value: PLUS INTEGER_CONST
    6            | PLUS REAL_CONST
    7            | MINUS INTEGER_CONST
    8            | MINUS REAL_CONST
    9            | INTEGER_CONST
   10            | REAL_CONST
   11            | CHAR_CONST

   12 basic_type: INTEGER
   13           | REAL
   14           | BOOLEAN
   15           | CHAR

   16 period: INTEGER_CONST DOTDOT INTEGER_CONST
   17       | period COMMA INTEGER_CONST DOTDOT INTEGER_CONST

   18 type: basic_type
   19     | ARRAY LBRACKET period RBRACKET OF basic_type

   20 idlist: IDENTIFIER
   21       | idlist COMMA IDENTIFIER

   22 const_declaration: IDENTIFIER EQUAL const_value
   23                  | const_declaration SEMICOLON IDENTIFIER EQUAL const_value

   24 const_declarations: /* empty */
   25                   | CONST const_declaration SEMICOLON

   26 value_parameter: idlist COLON basic_type

   27 var_parameter: VAR value_parameter

   28 parameter: var_parameter
   29          | value_parameter

   30 parameter_list: parameter
   31               | parameter_list SEMICOLON parameter

   32 formal_parameter: /* empty */
   33                 | LPAREN parameter_list RPAREN

   34 var_declaration: idlist COLON type
   35                | var_declaration SEMICOLON idlist COLON type

   36 var_declarations: /* empty */
   37                 | VAR var_declaration SEMICOLON

   38 subprogram_declarations: /* empty */
   39                        | subprogram_declarations subprogram SEMICOLON

   40 subprogram_head: PROCEDURE IDENTIFIER formal_parameter
   41                | FUNCTION IDENTIFIER formal_parameter COLON basic_type

   42 subprogram_body: const_declarations var_declarations compound_statement

   43 subprogram: subprogram_head SEMICOLON subprogram_body

   44 compound_statement: TOKEN_BEGIN statement_list END
   45                   | TOKEN_BEGIN statement_list SEMICOLON END

   46 statement_list: statement
   47               | statement_list SEMICOLON statement

   48 variable: IDENTIFIER id_varpart

   49 id_varpart: /* empty */
   50           | LBRACKET expression_list RBRACKET

   51 factor: INTEGER_CONST
   52       | REAL_CONST
   53       | CHAR_CONST
   54       | BOOLEAN_CONST
   55       | variable
   56       | function_call
   57       | LPAREN expression RPAREN
   58       | NOT factor
   59       | MINUS factor

   60 term: factor
   61     | term MULTIPLY factor
   62     | term DIVIDE factor
   63     | term DIV factor
   64     | term MOD factor
   65     | term AND factor

   66 simple_expression: term
   67                  | simple_expression PLUS term
   68                  | simple_expression MINUS term
   69                  | simple_expression OR term

   70 expression: simple_expression
   71           | simple_expression EQUAL simple_expression
   72           | simple_expression NOT_EQUAL simple_expression
   73           | simple_expression LESS simple_expression
   74           | simple_expression LESS_EQUAL simple_expression
   75           | simple_expression GREATER simple_expression
   76           | simple_expression GREATER_EQUAL simple_expression

   77 expression_list: expression
   78                | expression_list COMMA expression

   79 function_call: IDENTIFIER LPAREN expression_list RPAREN
   80              | IDENTIFIER LPAREN RPAREN

   81 variable_list: variable
   82              | variable_list COMMA variable

   83 else_part: /* empty */
   84          | ELSE statement

   85 statement: IDENTIFIER id_varpart ASSIGN expression
   86          | function_call
   87          | compound_statement
   88          | IF expression THEN statement else_part
   89          | FOR IDENTIFIER ASSIGN expression TO expression DO statement
   90          | READ LPAREN variable_list RPAREN
   91          | WRITE LPAREN expression_list RPAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
OR (258) 69
MINUS (259) 7 8 59 68
PLUS (260) 5 6 67
AND (261) 65
MOD (262) 64
DIV (263) 63
DIVIDE (264) 62
MULTIPLY (265) 61
NOT (266) 58
GREATER_EQUAL (267) 76
GREATER (268) 75
LESS_EQUAL (269) 74
LESS (270) 73
NOT_EQUAL (271) 72
EQUAL (272) 22 23 71
THEN (273) 88
ELSE (274) 84
LPAREN (275) 1 33 57 79 80 90 91
ASSIGN (276) 85 89
IDENTIFIER (277) 1 2 20 21 22 23 40 41 48 79 80 85 89
INTEGER_CONST (278) 5 7 9 16 17 51
REAL_CONST (279) 6 8 10 52
CHAR_CONST (280) 11 53
BOOLEAN_CONST (281) 54
PROGRAM (282) 1 2
VAR (283) 27 37
CONST (284) 25
PROCEDURE (285) 40
FUNCTION (286) 41
TOKEN_BEGIN (287) 44 45
END (288) 44 45
IF (289) 88
FOR (290) 89
TO (291) 89
DO (292) 89
READ (293) 90
WRITE (294) 91
ARRAY (295) 19
OF (296) 19
INTEGER (297) 12
REAL (298) 13
BOOLEAN (299) 14
CHAR (300) 15
SEMICOLON (301) 4 23 25 31 35 37 39 43 45 47
COLON (302) 26 34 35 41
COMMA (303) 17 21 78 82
RPAREN (304) 1 33 57 79 80 90 91
LBRACKET (305) 19 50
RBRACKET (306) 19 50
DOT (307) 4
DOTDOT (308) 16 17
EOF_TOKEN (309)
UMINUS (310)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program_head (57)
    on left: 1 2, on right: 4
program_body (58)
    on left: 3, on right: 4
program (59)
    on left: 4, on right: 0
const_value (60)
    on left: 5 6 7 8 9 10 11, on right: 22 23
basic_type (61)
    on left: 12 13 14 15, on right: 18 19 26 41
period (62)
    on left: 16 17, on right: 17 19
type (63)
    on left: 18 19, on right: 34 35
idlist (64)
    on left: 20 21, on right: 1 21 26 34 35
const_declaration (65)
    on left: 22 23, on right: 23 25
const_declarations (66)
    on left: 24 25, on right: 3 42
value_parameter (67)
    on left: 26, on right: 27 29
var_parameter (68)
    on left: 27, on right: 28
parameter (69)
    on left: 28 29, on right: 30 31
parameter_list (70)
    on left: 30 31, on right: 31 33
formal_parameter (71)
    on left: 32 33, on right: 40 41
var_declaration (72)
    on left: 34 35, on right: 35 37
var_declarations (73)
    on left: 36 37, on right: 3 42
subprogram_declarations (74)
    on left: 38 39, on right: 3 39
subprogram_head (75)
    on left: 40 41, on right: 43
subprogram_body (76)
    on left: 42, on right: 43
subprogram (77)
    on left: 43, on right: 39
compound_statement (78)
    on left: 44 45, on right: 3 42 87
statement_list (79)
    on left: 46 47, on right: 44 45 47
variable (80)
    on left: 48, on right: 55 81 82
id_varpart (81)
    on left: 49 50, on right: 48 85
factor (82)
    on left: 51 52 53 54 55 56 57 58 59, on right: 58 59 60 61 62 63
    64 65
term (83)
    on left: 60 61 62 63 64 65, on right: 61 62 63 64 65 66 67 68 69
simple_expression (84)
    on left: 66 67 68 69, on right: 67 68 69 70 71 72 73 74 75 76
expression (85)
    on left: 70 71 72 73 74 75 76, on right: 57 77 78 85 88 89
expression_list (86)
    on left: 77 78, on right: 50 78 79 91
function_call (87)
    on left: 79 80, on right: 56 86
variable_list (88)
    on left: 81 82, on right: 82 90
else_part (89)
    on left: 83 84, on right: 88
statement (90)
    on left: 85 86 87 88 89 90 91, on right: 46 47 84 88 89


state 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program_head  go to state 2
    program       go to state 3


state 1

    1 program_head: PROGRAM . IDENTIFIER LPAREN idlist RPAREN
    2             | PROGRAM . IDENTIFIER

    IDENTIFIER  shift, and go to state 4


state 2

    4 program: program_head . SEMICOLON program_body DOT

    SEMICOLON  shift, and go to state 5


state 3

    0 $accept: program . $end

    $end  shift, and go to state 6


state 4

    1 program_head: PROGRAM IDENTIFIER . LPAREN idlist RPAREN
    2             | PROGRAM IDENTIFIER .

    LPAREN  shift, and go to state 7

    $default  reduce using rule 2 (program_head)


state 5

    4 program: program_head SEMICOLON . program_body DOT

    CONST  shift, and go to state 8

    $default  reduce using rule 24 (const_declarations)

    program_body        go to state 9
    const_declarations  go to state 10


state 6

    0 $accept: program $end .

    $default  accept


state 7

    1 program_head: PROGRAM IDENTIFIER LPAREN . idlist RPAREN

    IDENTIFIER  shift, and go to state 11

    idlist  go to state 12


state 8

   25 const_declarations: CONST . const_declaration SEMICOLON

    IDENTIFIER  shift, and go to state 13

    const_declaration  go to state 14


state 9

    4 program: program_head SEMICOLON program_body . DOT

    DOT  shift, and go to state 15


state 10

    3 program_body: const_declarations . var_declarations subprogram_declarations compound_statement

    VAR  shift, and go to state 16

    $default  reduce using rule 36 (var_declarations)

    var_declarations  go to state 17


state 11

   20 idlist: IDENTIFIER .

    $default  reduce using rule 20 (idlist)


state 12

    1 program_head: PROGRAM IDENTIFIER LPAREN idlist . RPAREN
   21 idlist: idlist . COMMA IDENTIFIER

    COMMA   shift, and go to state 18
    RPAREN  shift, and go to state 19


state 13

   22 const_declaration: IDENTIFIER . EQUAL const_value

    EQUAL  shift, and go to state 20


state 14

   23 const_declaration: const_declaration . SEMICOLON IDENTIFIER EQUAL const_value
   25 const_declarations: CONST const_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 21


state 15

    4 program: program_head SEMICOLON program_body DOT .

    $default  reduce using rule 4 (program)


state 16

   37 var_declarations: VAR . var_declaration SEMICOLON

    IDENTIFIER  shift, and go to state 11

    idlist           go to state 22
    var_declaration  go to state 23


state 17

    3 program_body: const_declarations var_declarations . subprogram_declarations compound_statement

    $default  reduce using rule 38 (subprogram_declarations)

    subprogram_declarations  go to state 24


state 18

   21 idlist: idlist COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 25


state 19

    1 program_head: PROGRAM IDENTIFIER LPAREN idlist RPAREN .

    $default  reduce using rule 1 (program_head)


state 20

   22 const_declaration: IDENTIFIER EQUAL . const_value

    MINUS          shift, and go to state 26
    PLUS           shift, and go to state 27
    INTEGER_CONST  shift, and go to state 28
    REAL_CONST     shift, and go to state 29
    CHAR_CONST     shift, and go to state 30

    const_value  go to state 31


state 21

   23 const_declaration: const_declaration SEMICOLON . IDENTIFIER EQUAL const_value
   25 const_declarations: CONST const_declaration SEMICOLON .

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 25 (const_declarations)


state 22

   21 idlist: idlist . COMMA IDENTIFIER
   34 var_declaration: idlist . COLON type

    COLON  shift, and go to state 33
    COMMA  shift, and go to state 18


state 23

   35 var_declaration: var_declaration . SEMICOLON idlist COLON type
   37 var_declarations: VAR var_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 34


state 24

    3 program_body: const_declarations var_declarations subprogram_declarations . compound_statement
   39 subprogram_declarations: subprogram_declarations . subprogram SEMICOLON

    PROCEDURE    shift, and go to state 35
    FUNCTION     shift, and go to state 36
    TOKEN_BEGIN  shift, and go to state 37

    subprogram_head     go to state 38
    subprogram          go to state 39
    compound_statement  go to state 40


state 25

   21 idlist: idlist COMMA IDENTIFIER .

    $default  reduce using rule 21 (idlist)


state 26

    7 const_value: MINUS . INTEGER_CONST
    8            | MINUS . REAL_CONST

    INTEGER_CONST  shift, and go to state 41
    REAL_CONST     shift, and go to state 42


state 27

    5 const_value: PLUS . INTEGER_CONST
    6            | PLUS . REAL_CONST

    INTEGER_CONST  shift, and go to state 43
    REAL_CONST     shift, and go to state 44


state 28

    9 const_value: INTEGER_CONST .

    $default  reduce using rule 9 (const_value)


state 29

   10 const_value: REAL_CONST .

    $default  reduce using rule 10 (const_value)


state 30

   11 const_value: CHAR_CONST .

    $default  reduce using rule 11 (const_value)


state 31

   22 const_declaration: IDENTIFIER EQUAL const_value .

    $default  reduce using rule 22 (const_declaration)


state 32

   23 const_declaration: const_declaration SEMICOLON IDENTIFIER . EQUAL const_value

    EQUAL  shift, and go to state 45


state 33

   34 var_declaration: idlist COLON . type

    ARRAY    shift, and go to state 46
    INTEGER  shift, and go to state 47
    REAL     shift, and go to state 48
    BOOLEAN  shift, and go to state 49
    CHAR     shift, and go to state 50

    basic_type  go to state 51
    type        go to state 52


state 34

   35 var_declaration: var_declaration SEMICOLON . idlist COLON type
   37 var_declarations: VAR var_declaration SEMICOLON .

    IDENTIFIER  shift, and go to state 11

    $default  reduce using rule 37 (var_declarations)

    idlist  go to state 53


state 35

   40 subprogram_head: PROCEDURE . IDENTIFIER formal_parameter

    IDENTIFIER  shift, and go to state 54


state 36

   41 subprogram_head: FUNCTION . IDENTIFIER formal_parameter COLON basic_type

    IDENTIFIER  shift, and go to state 55


state 37

   44 compound_statement: TOKEN_BEGIN . statement_list END
   45                   | TOKEN_BEGIN . statement_list SEMICOLON END

    IDENTIFIER   shift, and go to state 56
    TOKEN_BEGIN  shift, and go to state 37
    IF           shift, and go to state 57
    FOR          shift, and go to state 58
    READ         shift, and go to state 59
    WRITE        shift, and go to state 60

    compound_statement  go to state 61
    statement_list      go to state 62
    function_call       go to state 63
    statement           go to state 64


state 38

   43 subprogram: subprogram_head . SEMICOLON subprogram_body

    SEMICOLON  shift, and go to state 65


state 39

   39 subprogram_declarations: subprogram_declarations subprogram . SEMICOLON

    SEMICOLON  shift, and go to state 66


state 40

    3 program_body: const_declarations var_declarations subprogram_declarations compound_statement .

    $default  reduce using rule 3 (program_body)


state 41

    7 const_value: MINUS INTEGER_CONST .

    $default  reduce using rule 7 (const_value)


state 42

    8 const_value: MINUS REAL_CONST .

    $default  reduce using rule 8 (const_value)


state 43

    5 const_value: PLUS INTEGER_CONST .

    $default  reduce using rule 5 (const_value)


state 44

    6 const_value: PLUS REAL_CONST .

    $default  reduce using rule 6 (const_value)


state 45

   23 const_declaration: const_declaration SEMICOLON IDENTIFIER EQUAL . const_value

    MINUS          shift, and go to state 26
    PLUS           shift, and go to state 27
    INTEGER_CONST  shift, and go to state 28
    REAL_CONST     shift, and go to state 29
    CHAR_CONST     shift, and go to state 30

    const_value  go to state 67


state 46

   19 type: ARRAY . LBRACKET period RBRACKET OF basic_type

    LBRACKET  shift, and go to state 68


state 47

   12 basic_type: INTEGER .

    $default  reduce using rule 12 (basic_type)


state 48

   13 basic_type: REAL .

    $default  reduce using rule 13 (basic_type)


state 49

   14 basic_type: BOOLEAN .

    $default  reduce using rule 14 (basic_type)


state 50

   15 basic_type: CHAR .

    $default  reduce using rule 15 (basic_type)


state 51

   18 type: basic_type .

    $default  reduce using rule 18 (type)


state 52

   34 var_declaration: idlist COLON type .

    $default  reduce using rule 34 (var_declaration)


state 53

   21 idlist: idlist . COMMA IDENTIFIER
   35 var_declaration: var_declaration SEMICOLON idlist . COLON type

    COLON  shift, and go to state 69
    COMMA  shift, and go to state 18


state 54

   40 subprogram_head: PROCEDURE IDENTIFIER . formal_parameter

    LPAREN  shift, and go to state 70

    $default  reduce using rule 32 (formal_parameter)

    formal_parameter  go to state 71


state 55

   41 subprogram_head: FUNCTION IDENTIFIER . formal_parameter COLON basic_type

    LPAREN  shift, and go to state 70

    $default  reduce using rule 32 (formal_parameter)

    formal_parameter  go to state 72


state 56

   79 function_call: IDENTIFIER . LPAREN expression_list RPAREN
   80              | IDENTIFIER . LPAREN RPAREN
   85 statement: IDENTIFIER . id_varpart ASSIGN expression

    LPAREN    shift, and go to state 73
    LBRACKET  shift, and go to state 74

    $default  reduce using rule 49 (id_varpart)

    id_varpart  go to state 75


state 57

   88 statement: IF . expression THEN statement else_part

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 87
    expression         go to state 88
    function_call      go to state 89


state 58

   89 statement: FOR . IDENTIFIER ASSIGN expression TO expression DO statement

    IDENTIFIER  shift, and go to state 90


state 59

   90 statement: READ . LPAREN variable_list RPAREN

    LPAREN  shift, and go to state 91


state 60

   91 statement: WRITE . LPAREN expression_list RPAREN

    LPAREN  shift, and go to state 92


state 61

   87 statement: compound_statement .

    $default  reduce using rule 87 (statement)


state 62

   44 compound_statement: TOKEN_BEGIN statement_list . END
   45                   | TOKEN_BEGIN statement_list . SEMICOLON END
   47 statement_list: statement_list . SEMICOLON statement

    END        shift, and go to state 93
    SEMICOLON  shift, and go to state 94


state 63

   86 statement: function_call .

    $default  reduce using rule 86 (statement)


state 64

   46 statement_list: statement .

    $default  reduce using rule 46 (statement_list)


state 65

   43 subprogram: subprogram_head SEMICOLON . subprogram_body

    CONST  shift, and go to state 8

    $default  reduce using rule 24 (const_declarations)

    const_declarations  go to state 95
    subprogram_body     go to state 96


state 66

   39 subprogram_declarations: subprogram_declarations subprogram SEMICOLON .

    $default  reduce using rule 39 (subprogram_declarations)


state 67

   23 const_declaration: const_declaration SEMICOLON IDENTIFIER EQUAL const_value .

    $default  reduce using rule 23 (const_declaration)


state 68

   19 type: ARRAY LBRACKET . period RBRACKET OF basic_type

    INTEGER_CONST  shift, and go to state 97

    period  go to state 98


state 69

   35 var_declaration: var_declaration SEMICOLON idlist COLON . type

    ARRAY    shift, and go to state 46
    INTEGER  shift, and go to state 47
    REAL     shift, and go to state 48
    BOOLEAN  shift, and go to state 49
    CHAR     shift, and go to state 50

    basic_type  go to state 51
    type        go to state 99


state 70

   33 formal_parameter: LPAREN . parameter_list RPAREN

    IDENTIFIER  shift, and go to state 11
    VAR         shift, and go to state 100

    idlist           go to state 101
    value_parameter  go to state 102
    var_parameter    go to state 103
    parameter        go to state 104
    parameter_list   go to state 105


state 71

   40 subprogram_head: PROCEDURE IDENTIFIER formal_parameter .

    $default  reduce using rule 40 (subprogram_head)


state 72

   41 subprogram_head: FUNCTION IDENTIFIER formal_parameter . COLON basic_type

    COLON  shift, and go to state 106


state 73

   79 function_call: IDENTIFIER LPAREN . expression_list RPAREN
   80              | IDENTIFIER LPAREN . RPAREN

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83
    RPAREN         shift, and go to state 107

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 87
    expression         go to state 108
    expression_list    go to state 109
    function_call      go to state 89


state 74

   50 id_varpart: LBRACKET . expression_list RBRACKET

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 87
    expression         go to state 108
    expression_list    go to state 110
    function_call      go to state 89


state 75

   85 statement: IDENTIFIER id_varpart . ASSIGN expression

    ASSIGN  shift, and go to state 111


state 76

   59 factor: MINUS . factor

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable       go to state 84
    factor         go to state 112
    function_call  go to state 89


state 77

   58 factor: NOT . factor

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable       go to state 84
    factor         go to state 113
    function_call  go to state 89


state 78

   57 factor: LPAREN . expression RPAREN

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 87
    expression         go to state 114
    function_call      go to state 89


state 79

   48 variable: IDENTIFIER . id_varpart
   79 function_call: IDENTIFIER . LPAREN expression_list RPAREN
   80              | IDENTIFIER . LPAREN RPAREN

    LPAREN    shift, and go to state 73
    LBRACKET  shift, and go to state 74

    $default  reduce using rule 49 (id_varpart)

    id_varpart  go to state 115


state 80

   51 factor: INTEGER_CONST .

    $default  reduce using rule 51 (factor)


state 81

   52 factor: REAL_CONST .

    $default  reduce using rule 52 (factor)


state 82

   53 factor: CHAR_CONST .

    $default  reduce using rule 53 (factor)


state 83

   54 factor: BOOLEAN_CONST .

    $default  reduce using rule 54 (factor)


state 84

   55 factor: variable .

    $default  reduce using rule 55 (factor)


state 85

   60 term: factor .

    $default  reduce using rule 60 (term)


state 86

   61 term: term . MULTIPLY factor
   62     | term . DIVIDE factor
   63     | term . DIV factor
   64     | term . MOD factor
   65     | term . AND factor
   66 simple_expression: term .

    AND       shift, and go to state 116
    MOD       shift, and go to state 117
    DIV       shift, and go to state 118
    DIVIDE    shift, and go to state 119
    MULTIPLY  shift, and go to state 120

    $default  reduce using rule 66 (simple_expression)


state 87

   67 simple_expression: simple_expression . PLUS term
   68                  | simple_expression . MINUS term
   69                  | simple_expression . OR term
   70 expression: simple_expression .
   71           | simple_expression . EQUAL simple_expression
   72           | simple_expression . NOT_EQUAL simple_expression
   73           | simple_expression . LESS simple_expression
   74           | simple_expression . LESS_EQUAL simple_expression
   75           | simple_expression . GREATER simple_expression
   76           | simple_expression . GREATER_EQUAL simple_expression

    OR             shift, and go to state 121
    MINUS          shift, and go to state 122
    PLUS           shift, and go to state 123
    GREATER_EQUAL  shift, and go to state 124
    GREATER        shift, and go to state 125
    LESS_EQUAL     shift, and go to state 126
    LESS           shift, and go to state 127
    NOT_EQUAL      shift, and go to state 128
    EQUAL          shift, and go to state 129

    $default  reduce using rule 70 (expression)


state 88

   88 statement: IF expression . THEN statement else_part

    THEN  shift, and go to state 130


state 89

   56 factor: function_call .

    $default  reduce using rule 56 (factor)


state 90

   89 statement: FOR IDENTIFIER . ASSIGN expression TO expression DO statement

    ASSIGN  shift, and go to state 131


state 91

   90 statement: READ LPAREN . variable_list RPAREN

    IDENTIFIER  shift, and go to state 132

    variable       go to state 133
    variable_list  go to state 134


state 92

   91 statement: WRITE LPAREN . expression_list RPAREN

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 87
    expression         go to state 108
    expression_list    go to state 135
    function_call      go to state 89


state 93

   44 compound_statement: TOKEN_BEGIN statement_list END .

    $default  reduce using rule 44 (compound_statement)


state 94

   45 compound_statement: TOKEN_BEGIN statement_list SEMICOLON . END
   47 statement_list: statement_list SEMICOLON . statement

    IDENTIFIER   shift, and go to state 56
    TOKEN_BEGIN  shift, and go to state 37
    END          shift, and go to state 136
    IF           shift, and go to state 57
    FOR          shift, and go to state 58
    READ         shift, and go to state 59
    WRITE        shift, and go to state 60

    compound_statement  go to state 61
    function_call       go to state 63
    statement           go to state 137


state 95

   42 subprogram_body: const_declarations . var_declarations compound_statement

    VAR  shift, and go to state 16

    $default  reduce using rule 36 (var_declarations)

    var_declarations  go to state 138


state 96

   43 subprogram: subprogram_head SEMICOLON subprogram_body .

    $default  reduce using rule 43 (subprogram)


state 97

   16 period: INTEGER_CONST . DOTDOT INTEGER_CONST

    DOTDOT  shift, and go to state 139


state 98

   17 period: period . COMMA INTEGER_CONST DOTDOT INTEGER_CONST
   19 type: ARRAY LBRACKET period . RBRACKET OF basic_type

    COMMA     shift, and go to state 140
    RBRACKET  shift, and go to state 141


state 99

   35 var_declaration: var_declaration SEMICOLON idlist COLON type .

    $default  reduce using rule 35 (var_declaration)


state 100

   27 var_parameter: VAR . value_parameter

    IDENTIFIER  shift, and go to state 11

    idlist           go to state 101
    value_parameter  go to state 142


state 101

   21 idlist: idlist . COMMA IDENTIFIER
   26 value_parameter: idlist . COLON basic_type

    COLON  shift, and go to state 143
    COMMA  shift, and go to state 18


state 102

   29 parameter: value_parameter .

    $default  reduce using rule 29 (parameter)


state 103

   28 parameter: var_parameter .

    $default  reduce using rule 28 (parameter)


state 104

   30 parameter_list: parameter .

    $default  reduce using rule 30 (parameter_list)


state 105

   31 parameter_list: parameter_list . SEMICOLON parameter
   33 formal_parameter: LPAREN parameter_list . RPAREN

    SEMICOLON  shift, and go to state 144
    RPAREN     shift, and go to state 145


state 106

   41 subprogram_head: FUNCTION IDENTIFIER formal_parameter COLON . basic_type

    INTEGER  shift, and go to state 47
    REAL     shift, and go to state 48
    BOOLEAN  shift, and go to state 49
    CHAR     shift, and go to state 50

    basic_type  go to state 146


state 107

   80 function_call: IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 80 (function_call)


state 108

   77 expression_list: expression .

    $default  reduce using rule 77 (expression_list)


state 109

   78 expression_list: expression_list . COMMA expression
   79 function_call: IDENTIFIER LPAREN expression_list . RPAREN

    COMMA   shift, and go to state 147
    RPAREN  shift, and go to state 148


state 110

   50 id_varpart: LBRACKET expression_list . RBRACKET
   78 expression_list: expression_list . COMMA expression

    COMMA     shift, and go to state 147
    RBRACKET  shift, and go to state 149


state 111

   85 statement: IDENTIFIER id_varpart ASSIGN . expression

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 87
    expression         go to state 150
    function_call      go to state 89


state 112

   59 factor: MINUS factor .

    $default  reduce using rule 59 (factor)


state 113

   58 factor: NOT factor .

    $default  reduce using rule 58 (factor)


state 114

   57 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 151


state 115

   48 variable: IDENTIFIER id_varpart .

    $default  reduce using rule 48 (variable)


state 116

   65 term: term AND . factor

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable       go to state 84
    factor         go to state 152
    function_call  go to state 89


state 117

   64 term: term MOD . factor

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable       go to state 84
    factor         go to state 153
    function_call  go to state 89


state 118

   63 term: term DIV . factor

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable       go to state 84
    factor         go to state 154
    function_call  go to state 89


state 119

   62 term: term DIVIDE . factor

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable       go to state 84
    factor         go to state 155
    function_call  go to state 89


state 120

   61 term: term MULTIPLY . factor

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable       go to state 84
    factor         go to state 156
    function_call  go to state 89


state 121

   69 simple_expression: simple_expression OR . term

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable       go to state 84
    factor         go to state 85
    term           go to state 157
    function_call  go to state 89


state 122

   68 simple_expression: simple_expression MINUS . term

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable       go to state 84
    factor         go to state 85
    term           go to state 158
    function_call  go to state 89


state 123

   67 simple_expression: simple_expression PLUS . term

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable       go to state 84
    factor         go to state 85
    term           go to state 159
    function_call  go to state 89


state 124

   76 expression: simple_expression GREATER_EQUAL . simple_expression

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 160
    function_call      go to state 89


state 125

   75 expression: simple_expression GREATER . simple_expression

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 161
    function_call      go to state 89


state 126

   74 expression: simple_expression LESS_EQUAL . simple_expression

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 162
    function_call      go to state 89


state 127

   73 expression: simple_expression LESS . simple_expression

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 163
    function_call      go to state 89


state 128

   72 expression: simple_expression NOT_EQUAL . simple_expression

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 164
    function_call      go to state 89


state 129

   71 expression: simple_expression EQUAL . simple_expression

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 165
    function_call      go to state 89


state 130

   88 statement: IF expression THEN . statement else_part

    IDENTIFIER   shift, and go to state 56
    TOKEN_BEGIN  shift, and go to state 37
    IF           shift, and go to state 57
    FOR          shift, and go to state 58
    READ         shift, and go to state 59
    WRITE        shift, and go to state 60

    compound_statement  go to state 61
    function_call       go to state 63
    statement           go to state 166


state 131

   89 statement: FOR IDENTIFIER ASSIGN . expression TO expression DO statement

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 87
    expression         go to state 167
    function_call      go to state 89


state 132

   48 variable: IDENTIFIER . id_varpart

    LBRACKET  shift, and go to state 74

    $default  reduce using rule 49 (id_varpart)

    id_varpart  go to state 115


state 133

   81 variable_list: variable .

    $default  reduce using rule 81 (variable_list)


state 134

   82 variable_list: variable_list . COMMA variable
   90 statement: READ LPAREN variable_list . RPAREN

    COMMA   shift, and go to state 168
    RPAREN  shift, and go to state 169


state 135

   78 expression_list: expression_list . COMMA expression
   91 statement: WRITE LPAREN expression_list . RPAREN

    COMMA   shift, and go to state 147
    RPAREN  shift, and go to state 170


state 136

   45 compound_statement: TOKEN_BEGIN statement_list SEMICOLON END .

    $default  reduce using rule 45 (compound_statement)


state 137

   47 statement_list: statement_list SEMICOLON statement .

    $default  reduce using rule 47 (statement_list)


state 138

   42 subprogram_body: const_declarations var_declarations . compound_statement

    TOKEN_BEGIN  shift, and go to state 37

    compound_statement  go to state 171


state 139

   16 period: INTEGER_CONST DOTDOT . INTEGER_CONST

    INTEGER_CONST  shift, and go to state 172


state 140

   17 period: period COMMA . INTEGER_CONST DOTDOT INTEGER_CONST

    INTEGER_CONST  shift, and go to state 173


state 141

   19 type: ARRAY LBRACKET period RBRACKET . OF basic_type

    OF  shift, and go to state 174


state 142

   27 var_parameter: VAR value_parameter .

    $default  reduce using rule 27 (var_parameter)


state 143

   26 value_parameter: idlist COLON . basic_type

    INTEGER  shift, and go to state 47
    REAL     shift, and go to state 48
    BOOLEAN  shift, and go to state 49
    CHAR     shift, and go to state 50

    basic_type  go to state 175


state 144

   31 parameter_list: parameter_list SEMICOLON . parameter

    IDENTIFIER  shift, and go to state 11
    VAR         shift, and go to state 100

    idlist           go to state 101
    value_parameter  go to state 102
    var_parameter    go to state 103
    parameter        go to state 176


state 145

   33 formal_parameter: LPAREN parameter_list RPAREN .

    $default  reduce using rule 33 (formal_parameter)


state 146

   41 subprogram_head: FUNCTION IDENTIFIER formal_parameter COLON basic_type .

    $default  reduce using rule 41 (subprogram_head)


state 147

   78 expression_list: expression_list COMMA . expression

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 87
    expression         go to state 177
    function_call      go to state 89


state 148

   79 function_call: IDENTIFIER LPAREN expression_list RPAREN .

    $default  reduce using rule 79 (function_call)


state 149

   50 id_varpart: LBRACKET expression_list RBRACKET .

    $default  reduce using rule 50 (id_varpart)


state 150

   85 statement: IDENTIFIER id_varpart ASSIGN expression .

    $default  reduce using rule 85 (statement)


state 151

   57 factor: LPAREN expression RPAREN .

    $default  reduce using rule 57 (factor)


state 152

   65 term: term AND factor .

    $default  reduce using rule 65 (term)


state 153

   64 term: term MOD factor .

    $default  reduce using rule 64 (term)


state 154

   63 term: term DIV factor .

    $default  reduce using rule 63 (term)


state 155

   62 term: term DIVIDE factor .

    $default  reduce using rule 62 (term)


state 156

   61 term: term MULTIPLY factor .

    $default  reduce using rule 61 (term)


state 157

   61 term: term . MULTIPLY factor
   62     | term . DIVIDE factor
   63     | term . DIV factor
   64     | term . MOD factor
   65     | term . AND factor
   69 simple_expression: simple_expression OR term .

    AND       shift, and go to state 116
    MOD       shift, and go to state 117
    DIV       shift, and go to state 118
    DIVIDE    shift, and go to state 119
    MULTIPLY  shift, and go to state 120

    $default  reduce using rule 69 (simple_expression)


state 158

   61 term: term . MULTIPLY factor
   62     | term . DIVIDE factor
   63     | term . DIV factor
   64     | term . MOD factor
   65     | term . AND factor
   68 simple_expression: simple_expression MINUS term .

    AND       shift, and go to state 116
    MOD       shift, and go to state 117
    DIV       shift, and go to state 118
    DIVIDE    shift, and go to state 119
    MULTIPLY  shift, and go to state 120

    $default  reduce using rule 68 (simple_expression)


state 159

   61 term: term . MULTIPLY factor
   62     | term . DIVIDE factor
   63     | term . DIV factor
   64     | term . MOD factor
   65     | term . AND factor
   67 simple_expression: simple_expression PLUS term .

    AND       shift, and go to state 116
    MOD       shift, and go to state 117
    DIV       shift, and go to state 118
    DIVIDE    shift, and go to state 119
    MULTIPLY  shift, and go to state 120

    $default  reduce using rule 67 (simple_expression)


state 160

   67 simple_expression: simple_expression . PLUS term
   68                  | simple_expression . MINUS term
   69                  | simple_expression . OR term
   76 expression: simple_expression GREATER_EQUAL simple_expression .

    OR     shift, and go to state 121
    MINUS  shift, and go to state 122
    PLUS   shift, and go to state 123

    $default  reduce using rule 76 (expression)


state 161

   67 simple_expression: simple_expression . PLUS term
   68                  | simple_expression . MINUS term
   69                  | simple_expression . OR term
   75 expression: simple_expression GREATER simple_expression .

    OR     shift, and go to state 121
    MINUS  shift, and go to state 122
    PLUS   shift, and go to state 123

    $default  reduce using rule 75 (expression)


state 162

   67 simple_expression: simple_expression . PLUS term
   68                  | simple_expression . MINUS term
   69                  | simple_expression . OR term
   74 expression: simple_expression LESS_EQUAL simple_expression .

    OR     shift, and go to state 121
    MINUS  shift, and go to state 122
    PLUS   shift, and go to state 123

    $default  reduce using rule 74 (expression)


state 163

   67 simple_expression: simple_expression . PLUS term
   68                  | simple_expression . MINUS term
   69                  | simple_expression . OR term
   73 expression: simple_expression LESS simple_expression .

    OR     shift, and go to state 121
    MINUS  shift, and go to state 122
    PLUS   shift, and go to state 123

    $default  reduce using rule 73 (expression)


state 164

   67 simple_expression: simple_expression . PLUS term
   68                  | simple_expression . MINUS term
   69                  | simple_expression . OR term
   72 expression: simple_expression NOT_EQUAL simple_expression .

    OR     shift, and go to state 121
    MINUS  shift, and go to state 122
    PLUS   shift, and go to state 123

    $default  reduce using rule 72 (expression)


state 165

   67 simple_expression: simple_expression . PLUS term
   68                  | simple_expression . MINUS term
   69                  | simple_expression . OR term
   71 expression: simple_expression EQUAL simple_expression .

    OR     shift, and go to state 121
    MINUS  shift, and go to state 122
    PLUS   shift, and go to state 123

    $default  reduce using rule 71 (expression)


state 166

   88 statement: IF expression THEN statement . else_part

    ELSE  shift, and go to state 178

    ELSE      [reduce using rule 83 (else_part)]
    $default  reduce using rule 83 (else_part)

    else_part  go to state 179


state 167

   89 statement: FOR IDENTIFIER ASSIGN expression . TO expression DO statement

    TO  shift, and go to state 180


state 168

   82 variable_list: variable_list COMMA . variable

    IDENTIFIER  shift, and go to state 132

    variable  go to state 181


state 169

   90 statement: READ LPAREN variable_list RPAREN .

    $default  reduce using rule 90 (statement)


state 170

   91 statement: WRITE LPAREN expression_list RPAREN .

    $default  reduce using rule 91 (statement)


state 171

   42 subprogram_body: const_declarations var_declarations compound_statement .

    $default  reduce using rule 42 (subprogram_body)


state 172

   16 period: INTEGER_CONST DOTDOT INTEGER_CONST .

    $default  reduce using rule 16 (period)


state 173

   17 period: period COMMA INTEGER_CONST . DOTDOT INTEGER_CONST

    DOTDOT  shift, and go to state 182


state 174

   19 type: ARRAY LBRACKET period RBRACKET OF . basic_type

    INTEGER  shift, and go to state 47
    REAL     shift, and go to state 48
    BOOLEAN  shift, and go to state 49
    CHAR     shift, and go to state 50

    basic_type  go to state 183


state 175

   26 value_parameter: idlist COLON basic_type .

    $default  reduce using rule 26 (value_parameter)


state 176

   31 parameter_list: parameter_list SEMICOLON parameter .

    $default  reduce using rule 31 (parameter_list)


state 177

   78 expression_list: expression_list COMMA expression .

    $default  reduce using rule 78 (expression_list)


state 178

   84 else_part: ELSE . statement

    IDENTIFIER   shift, and go to state 56
    TOKEN_BEGIN  shift, and go to state 37
    IF           shift, and go to state 57
    FOR          shift, and go to state 58
    READ         shift, and go to state 59
    WRITE        shift, and go to state 60

    compound_statement  go to state 61
    function_call       go to state 63
    statement           go to state 184


state 179

   88 statement: IF expression THEN statement else_part .

    $default  reduce using rule 88 (statement)


state 180

   89 statement: FOR IDENTIFIER ASSIGN expression TO . expression DO statement

    MINUS          shift, and go to state 76
    NOT            shift, and go to state 77
    LPAREN         shift, and go to state 78
    IDENTIFIER     shift, and go to state 79
    INTEGER_CONST  shift, and go to state 80
    REAL_CONST     shift, and go to state 81
    CHAR_CONST     shift, and go to state 82
    BOOLEAN_CONST  shift, and go to state 83

    variable           go to state 84
    factor             go to state 85
    term               go to state 86
    simple_expression  go to state 87
    expression         go to state 185
    function_call      go to state 89


state 181

   82 variable_list: variable_list COMMA variable .

    $default  reduce using rule 82 (variable_list)


state 182

   17 period: period COMMA INTEGER_CONST DOTDOT . INTEGER_CONST

    INTEGER_CONST  shift, and go to state 186


state 183

   19 type: ARRAY LBRACKET period RBRACKET OF basic_type .

    $default  reduce using rule 19 (type)


state 184

   84 else_part: ELSE statement .

    $default  reduce using rule 84 (else_part)


state 185

   89 statement: FOR IDENTIFIER ASSIGN expression TO expression . DO statement

    DO  shift, and go to state 187


state 186

   17 period: period COMMA INTEGER_CONST DOTDOT INTEGER_CONST .

    $default  reduce using rule 17 (period)


state 187

   89 statement: FOR IDENTIFIER ASSIGN expression TO expression DO . statement

    IDENTIFIER   shift, and go to state 56
    TOKEN_BEGIN  shift, and go to state 37
    IF           shift, and go to state 57
    FOR          shift, and go to state 58
    READ         shift, and go to state 59
    WRITE        shift, and go to state 60

    compound_statement  go to state 61
    function_call       go to state 63
    statement           go to state 188


state 188

   89 statement: FOR IDENTIFIER ASSIGN expression TO expression DO statement .

    $default  reduce using rule 89 (statement)
